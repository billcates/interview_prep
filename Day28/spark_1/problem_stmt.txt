Problem Statement â€” Implement SCD Type 2 with Delta Lake

You are receiving incremental user profile updates from a Kafka/S3 stream with the following schema:

Column	Type	Description
user_id	STRING	Unique user key
name	STRING	User full name
city	STRING	User's current city
updated_at	TIMESTAMP	Time of this change record

You need to maintain a Delta table users_scd with SCD Type 2 logic, meaning:

Column	Description
user_id	Natural key
name	Latest name for that record
city	Latest city
is_active	1 for current record, 0 for historical
valid_from	Timestamp when this version became active
valid_to	Timestamp when it was replaced (NULL if active)

ðŸ§  Requirements

Use foreachBatch + MERGE into Delta.
When a userâ€™s city/name changes â†’ close the old record (is_active=0, set valid_to = new update time) and insert a new record (is_active=1).
If the same data comes again without change â†’ do nothing (avoid duplicates).
If user_id does not exist, insert a new row.
Watermark NOT required.

Use only code-level logic, no Delta Change Data Feed.

ðŸŽ¯ Expected Output Behavior
Event	Action
First record for a user	Insert with is_active = 1, valid_to = NULL
Update comes with different city/name	Set previous record is_active = 0, valid_to = updated_at, then insert new record
Update comes with same data	Ignore (no change)